# Set number of matches allowed per foreach story node invocation
pm.maxmatches = 40

# Place the names of the topology control algorithms to use as CSV (e.g., tcMethods=KtcAlgorithm,LStarKtcAlgorithm)
tc.algorithms = LStarKtcAlgorithm,LmstAlgorithm,KtcAlgorithm

# TODO insert correct text
#KtcAlgorithm
tc.KtcAlgorithm.parameters=const-k
tc.KtcAlgorithm.constants=const-k=1.2
#LStarKtcAlgorithm
tc.LStarKtcAlgorithm.parameters =const-k, const-stretchFactor
tc.LStarKtcAlgorithm.constants =const-k = 1.2, const-stretchFactor=1.5, const-updateinterval=300, const-broadcasthopcount_immediate_max = 10, const-broadcasthopcount_immediate_min = 1, const-broadcasthopcount_smalldelay_min = 55, const-broadcasthopcount_smalldelay_max = 65, const-broadcasthopcount_periodic_min = 270, const-broadcasthopcount_periodic_max = 330
tc.LStarKtcAlgorithm.enableHopcountProcess = true
#LmstAlgorithm
tc.LmstAlgorithm.helperclasses = Tree, TreeEntry
tc.LmstAlgorithm.generateDuplicates = true
#tc.LmstAlgorithm.dropUnidirectionalEdges = false
#tc.LmstAlgorithm.useEvaluationStatements= true 

# Set to 'false' if you want the complete amount of generated code in every source file, not only the code specific to each TC algorithm
cMoflon.reduceCodeSize = true

# Type mapping definitions follow 
# The Key is the EClass, and the value is the C struct you want it to be mapped to.
# Default: mappingOf.Node = networkaddr_t and mappingOf.Link = neighbor_t
mappingOf.Node = networkaddr_t
mappingOf.Link = neighbor_t
