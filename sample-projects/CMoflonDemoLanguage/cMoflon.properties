# Set number of matches allowed per foreach story node invocation
pm.maxmatches = 40

# Place the names of the topology control algorithms to use as CSV (e.g., tcMethods=KtcAlgorithm,LStarKtcAlgorithm)
tc.algorithms = KtcAlgorithm,LStarKtcAlgorithm,LmstAlgorithm,ThresholdInactivationAlgorithm

# For each algorithm there are a variety of options that you can set. The syntax is tc.<Name of the algorithm as specified in tc.algorithms>.<option> = [CSV]
# <option> = {parameters,constants,helperclasses,enableHopcountProcess,generateDuplicates,dropUnidirectionalEdges,useEvaluationStatements}
# You can find a description on how to use any of these options in the documentation under: https://github.com/eMoflon/cmoflon/wiki/cMoflon-Properties

#KtcAlgorithm
tc.KtcAlgorithm.parameters=k=const-k
tc.KtcAlgorithm.constants=const-k=1.2
tc.KtcAlgorithm.useEvaluationStatements = true
tc.KtcAlgorithm.generateDuplicates = false

#LStarKtcAlgorithm
tc.LStarKtcAlgorithm.parameters=k=const-k, stretchFactor=const-stretchFactor
# To fine-tune l*kTC, use the following properties: const-updateinterval=350, const-broadcasthopcount_immediate_max = 10, const-broadcasthopcount_immediate_min = 1, const-broadcasthopcount_smalldelay_min = 55, const-broadcasthopcount_smalldelay_max = 65, const-broadcasthopcount_periodic_min = 270, const-broadcasthopcount_periodic_max = 330
tc.LStarKtcAlgorithm.constants=const-k = 1.2, const-stretchFactor=1.5
tc.LStarKtcAlgorithm.enableHopcountProcess = true
tc.LStarKtcAlgorithm.useEvaluationStatements = true
tc.LStarKtcAlgorithm.generateDuplicates = false

#LmstAlgorithm
tc.LmstAlgorithm.helperclasses = Tree, TreeEntry
tc.LmstAlgorithm.generateDuplicates = false
tc.LmstAlgorithm.useEvaluationStatements= true
#tc.LmstAlgorithm.dropUnidirectionalEdges = false

#ThresholdInactivationAlgorithm
tc.ThresholdInactivationAlgorithm.parameters=maxWeight=10.0


# Type mapping definitions follow
# The Key is the EClass, and the value is the C struct you want it to be mapped to.
# Default: mappingOf.Node = networkaddr_t and mappingOf.Link = neighbor_t
mappingOf.Node = networkaddr_t
mappingOf.Link = neighbor_t
